#print(tabcor$variable)
#print(length(tabcor$variable))
for(i in tabcor$variable){
#print(tabcor$variable)
tabcor$correlacion[j]<-cor(aux[i],aux[,target])
j<-j+1
}
tabcor$variable<-as.character(tabcor$variable)
tabcor$abscor<-abs(tabcor$correlacion)
#print(tabcor)
p<-tabcor%>%arrange(desc(correlacion))%>%
ggplot(.) +
geom_bar(stat = "identity", aes(x=variable,y=correlacion,fill = correlacion)) +
scale_y_continuous()
#ggplot(.)+geom_bar(aes(x=correlacion,y=variable),stat="identity", fill="gray")+
#scale_x_continuous()
print(p)
sal<-tabcor%>%arrange(desc(abscor))
sal<-sal[sal$abscor>umbral,]
#print(sal)
numf<-nrow(sal)
if(numf>0){
print(sal)
print(sal$variable[1])
maxvar<-sal$variable[1]
print(dfc[,maxvar])
kp<-append(kp,maxvar)
print(paste0('maxvar ',maxvar))
print(dfc[abs(dfc[,maxvar])>umbral,maxvar])
ll<-row.names(dfc[abs(dfc[,maxvar])>umbral,])
print(paste0('vals ',ll))
print(paste0('tira ',ll[ll!=maxvar]))
print(sal)
lc<-c(ll)
#print(lc)
aux<-aux[,!(names(aux) %in% lc)]
features<-colnames(aux)
features<-features[features!=target]
}
}
return(as.character(append(kp,colnames(aux))))
}
FCB_filtering(mtcars,.7,'mpg')
#Función fast correlation...
FCB_filtering<-function(dat,umbral,target){
kp<-list()
features<-colnames(dat)
features<-features[features!=target]
numf<-1
aux<-dat
while(numf>0){
dfc<-cor(dat[,features])
dfc<-data.frame(dfc)
#print(dfc)
tabcor<-data.frame(features)
colnames(tabcor)<-'variable'
tabcor$correlacion<-0
#print(tabcor)
j<-1
#print(tabcor$variable)
#print(length(tabcor$variable))
for(i in tabcor$variable){
#print(tabcor$variable)
tabcor$correlacion[j]<-cor(aux[i],aux[,target])
j<-j+1
}
tabcor$variable<-as.character(tabcor$variable)
tabcor$abscor<-abs(tabcor$correlacion)
#print(tabcor)
p<-tabcor%>%arrange(desc(correlacion))%>%
ggplot(.) +
geom_bar(stat = "identity", aes(x=variable,y=correlacion,fill = correlacion)) +
scale_y_continuous()
#ggplot(.)+geom_bar(aes(x=correlacion,y=variable),stat="identity", fill="gray")+
#scale_x_continuous()
print(p)
sal<-tabcor%>%arrange(desc(abscor))
sal<-sal[sal$abscor>umbral,]
#print(sal)
numf<-nrow(sal)
if(numf>0){
#print(sal)
#print(sal$variable[1])
maxvar<-sal$variable[1]
#print(dfc[,maxvar])
kp<-append(kp,maxvar)
#print(paste0('maxvar ',maxvar))
#print(dfc[abs(dfc[,maxvar])>umbral,maxvar])
ll<-row.names(dfc[abs(dfc[,maxvar])>umbral,])
#print(paste0('vals ',ll))
#print(paste0('tira ',ll[ll!=maxvar]))
#print(sal)
lc<-c(ll)
#print(lc)
aux<-aux[,!(names(aux) %in% lc)]
features<-colnames(aux)
features<-features[features!=target]
}
}
return(as.character(append(kp,colnames(aux))))
}
FCB_filtering(mtcars,.7,'mpg')
library(plyr)
library(dplyr)
library(ggplot2)
source('utils.R')
# Loading
data(mtcars)#cargamos mtcars
bye2=FCB_filtering(mtcars,.7,'mpg')#usamos umbral .7 paa definir alta correlación con el target y entre las
#variables
#las variables a conservar es:
w<-select(mtcars,bye2)
head(w)
library(plyr)
library(dplyr)
library(ggplot2)
source('utils.R')
# Loading
data(mtcars)#cargamos mtcars
bye2=FCB_filtering(mtcars,.7,'mpg')#usamos umbral .7 paa definir alta correlación con el target y entre las
#variables
#las variables a conservar es:
w<-select(mtcars,bye2)
head(w)
ss<-summary(mtcars)
ss
ss<-summary(cor(mtcars))
ss
ss<-summary(cor(mtcars)<1)
ss
ss<-data.frame(cor(mtcars))
ss
s2<-summary(ss)
s2
s2<-summary(ss[ss<1,])
s2
s2
ss
ss[abs(ss)<1,]
ss
summary(ss[abs(ss)<1,])
ss
ss
ss[ss<1]
ss[ss<1,]
ss[ss<1]
summary(ss[ss<1])
ss
summary(ss[,ss<1])
ss[,ss<1]
diag(ss)
class(ss)
?cor
ss[,ss<1]
ss[ss==1]
ss[ss==1,]
ss
abs(ss)<1
ss[abs(ss)<1]
ss
ss[abs(ss)<1,]
ss[abs(ss)<1]
ss[abs(ss)==1]<-is.na()
ss[abs(ss)==1]<-is.na
ss[abs(ss)==1]<-NaN
ss
summary(ss)
summary(abs(ss))
we<-data.frame(summary(abs(ss)))
we
we$Var2
we$Var3
we$Freq
summary(abs(ss))
max(ss$mpg)
max(ss$mpg,na.rm = true())
max(abs(ss$mpg),na.rm = true())
lebgth(colnames(ss))
length(colnames(ss))
?replications
?rep(0,2)
rep(0,2)
max(abs(ss$mpg),na.rm = true())
max(abs(ss$mpg<1),na.rm = true())
ss$mpg<1
ss[ss$mpg<1]
ss[ss$mpg<1,'mpg']
ss[ss[,'mpg']<1,'mpg']
max(ss[ss[,'mpg']<1,'mpg'],na.rm = True)
max(ss[ss[,'mpg']<1,'mpg'],na.rm =True)
max(ss[ss[,'mpg']<1,'mpg'],na.rm =True())
max(ss[ss[,'mpg']<1,'mpg'],na.rm =true())
max(abs(ss[ss[,'mpg']<1,'mpg'],na.rm =true()))
max(abs(ss[ss[,'mpg']<1,'mpg'],na.rm =true()))
max(ss)
max(ss,na.rm =true)
max(abs(ss),na.rm =true)
max(abs(ss[,:]),na.rm =true)
apply(ss,max)
apply(ss,Fun=Max)
apply(ss,Fun=Max,na.rm=TRUE)
apply(ss,Max,na.rm=TRUE)
apply(ss,Max)
col.Max
max.col(ss)
max.col(ss,na.rm=TRUE)
max.col(ss,na.rm=TRUE)
?max.col
colMax <- function(data) sapply(ss, max, na.rm = TRUE)
colMax()
colMax <- function(data) sapply(abs(ss), max, na.rm = TRUE)
colMax()
ss
ss<-cor(mtcars)
ss
ss[ss==1]<-NA
ss
summary(ss)
ggplot(data=NULL,aes(x='variable',y=colMax))+geom_boxplot()
colMax()
colMax
colMax <- function(data) sapply(abs(ss), max, na.rm = TRUE)
colMax
ss
ss<-data.frame(ss)
colMax <- function(data) sapply(abs(ss), max, na.rm = TRUE)
colMax()
colMax <-sapply(abs(ss), max, na.rm = TRUE)
colMax
colMax.value
colMax[1]
as.vector(colMax)
ggplot(data=NULL,aes(x='variable',y=as.vector(colMax)))+geom_boxplot()
ggplot(data=NULL,aes(x='variable',y=as.vector(colMax)))+geom_boxplot()+ggtitle(''Distribución de correlaciones máximas por variable'')
ggplot(data=NULL,aes(x='variable',y=as.vector(colMax)))+geom_boxplot()+ggtitle('Distribución de correlaciones máximas por variable')
ss
ss[mpg]
ss['mpg']
ss['mpg','mpg']
ss[,'mpg']==-0.8521620
ss[,'mpg']==max(ss[,'mpg'],na.rm = TRUE)
ss[ss[,'mpg']==max(ss[,'mpg'],na.rm = TRUE)]
ss[ss[,'mpg']==max(ss[,'mpg'],na.rm = TRUE),'mpg']
ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),'mpg']
ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg'])),'mpg']
ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),'mpg']
ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = FALSE),'mpg']
ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),'mpg']
ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),'mpg'][1]
ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),'mpg'][2]
row(ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),'mpg'][2])
row.names(ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),'mpg'][2])
row.names(ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),'mpg'])
row.names(ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),])
row.names(ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),])[2]
cor(ss[,'wt'],ss[,'mpg'])
cor(ss[,'wt'],ss[,'mpg'])
cor(ss$mpg,ss$cyl)
cor(mtcars[,'wt'],mtcars[,'mpg'])
'wt' not in colnames(mtcars)
'wt' not %in% colnames(mtcars)
correlation_filtering(mtcars,'mpg',.875)
#Funcion corrrelation filtering
correlation_filtering<-function(dat,target,umbral){#esta funcion regresa la lista de variables a eliminar!
elimina<-list()
dfc<-cor(dat)
dfc<-data.frame(dfc)
dfc[dfc==1]<-NA#eliminamos las correlaciones entre mismas variables
crf<-sapply(abs(dfc), max, na.rm = TRUE)
p<-ggplot(data=NULL,aes(x='variable',y=as.vector(crf)))+geom_boxplot()+
ggtitle('Distribución de correlaciones máximas por variable')
print(p)
ll<-colnames(dat)
for(var in ll[ll!=target]){
if(max(abs(dfc[,var]),na.rm = TRUE)>umbral){
corvar<-row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),])[2]
print(var,corvar)
#Cuál tiramos?... la que este menos correlacionada con el target
if(abs(cor(dat[,var],dat[,target]))<abs(cor(dat[,corvar],dat[,target]))){
el<-var
print(paste0('elimina ',var))
}
else{
el<-corvar
print(paste0('elimina ',corvar))
}
if(!el %in% elimina){
elimina<-append(elimina,el)
}
}
}
return(elimina)
}
correlation_filtering(mtcars,'mpg',.875)
#Funcion corrrelation filtering
correlation_filtering<-function(dat,target,umbral){#esta funcion regresa la lista de variables a eliminar!
elimina<-list()
dfc<-cor(dat)
dfc<-data.frame(dfc)
dfc[dfc==1]<-NA#eliminamos las correlaciones entre mismas variables
crf<-sapply(abs(dfc), max, na.rm = TRUE)
p<-ggplot(data=NULL,aes(x='variable',y=as.vector(crf)))+geom_boxplot()+
ggtitle('Distribución de correlaciones máximas por variable en valor absoluto')
print(p)
ll<-colnames(dat)
for(var in ll[ll!=target]){
if(max(abs(dfc[,var]),na.rm = TRUE)>umbral){
corvar<-row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),])[2]
print(paste0(var,corvar))
#Cuál tiramos?... la que este menos correlacionada con el target
if(abs(cor(dat[,var],dat[,target]))<abs(cor(dat[,corvar],dat[,target]))){
el<-var
print(paste0('elimina ',var))
}
else{
el<-corvar
print(paste0('elimina ',corvar))
}
if(!el %in% elimina){
elimina<-append(elimina,el)
}
}
}
return(elimina)
}
correlation_filtering(mtcars,'mpg',.875)
#Funcion corrrelation filtering
correlation_filtering<-function(dat,target,umbral){#esta funcion regresa la lista de variables a eliminar!
elimina<-list()
dfc<-cor(dat)
dfc<-data.frame(dfc)
dfc[dfc==1]<-NA#eliminamos las correlaciones entre mismas variables
crf<-sapply(abs(dfc), max, na.rm = TRUE)
p<-ggplot(data=NULL,aes(x='variable',y=as.vector(crf)))+geom_boxplot()+
ggtitle('Distribución de correlaciones máximas por variable en valor absoluto')
print(p)
ll<-colnames(dat)
for(var in ll[ll!=target]){
if(max(abs(dfc[,var]),na.rm = TRUE)>umbral){
corvar<-row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),])[2]
print(max(abs(dfc[,var]),na.rm = TRUE))
print(paste0(var,corvar))
#Cuál tiramos?... la que este menos correlacionada con el target
if(abs(cor(dat[,var],dat[,target]))<abs(cor(dat[,corvar],dat[,target]))){
el<-var
print(paste0('elimina ',var))
}
else{
el<-corvar
print(paste0('elimina ',corvar))
}
if(!el %in% elimina){
elimina<-append(elimina,el)
}
}
}
return(elimina)
}
correlation_filtering(mtcars,'mpg',.875)
#Funcion corrrelation filtering
correlation_filtering<-function(dat,target,umbral){#esta funcion regresa la lista de variables a eliminar!
elimina<-list()
dfc<-cor(dat)
dfc<-data.frame(dfc)
dfc[dfc==1]<-NA#eliminamos las correlaciones entre mismas variables
crf<-sapply(abs(dfc), max, na.rm = TRUE)
p<-ggplot(data=NULL,aes(x='variable',y=as.vector(crf)))+geom_boxplot()+
ggtitle('Distribución de correlaciones máximas por variable en valor absoluto')
print(p)
ll<-colnames(dat)
for(var in ll[ll!=target]){
if(max(abs(dfc[,var]),na.rm = TRUE)>umbral){
corvar<-row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),])[2]
print(row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),]))
print(paste0(var,corvar))
#Cuál tiramos?... la que este menos correlacionada con el target
if(abs(cor(dat[,var],dat[,target]))<abs(cor(dat[,corvar],dat[,target]))){
el<-var
print(paste0('elimina ',var))
}
else{
el<-corvar
print(paste0('elimina ',corvar))
}
if(!el %in% elimina){
elimina<-append(elimina,el)
}
}
}
return(elimina)
}
correlation_filtering(mtcars,'mpg',.875)
h<-list("NA","t")
h
h[h!="NA"]
#Funcion corrrelation filtering
correlation_filtering<-function(dat,target,umbral){#esta funcion regresa la lista de variables a eliminar!
elimina<-list()
dfc<-cor(dat)
dfc<-data.frame(dfc)
dfc[dfc==1]<-NA#eliminamos las correlaciones entre mismas variables
crf<-sapply(abs(dfc), max, na.rm = TRUE)
p<-ggplot(data=NULL,aes(x='variable',y=as.vector(crf)))+geom_boxplot()+
ggtitle('Distribución de correlaciones máximas por variable en valor absoluto')
print(p)
ll<-colnames(dat)
for(var in ll[ll!=target]){
if(max(abs(dfc[,var]),na.rm = TRUE)>umbral){
corvar<-row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),])
corvar[corvar!="NA"]
print(row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),]))
print(paste0(var,corvar))
#Cuál tiramos?... la que este menos correlacionada con el target
if(abs(cor(dat[,var],dat[,target]))<abs(cor(dat[,corvar],dat[,target]))){
el<-var
print(paste0('elimina ',var))
}
else{
el<-corvar
print(paste0('elimina ',corvar))
}
if(!el %in% elimina){
elimina<-append(elimina,el)
}
}
}
return(elimina)
}
correlation_filtering(mtcars,'mpg',.875)
row.names(ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),])
row.names(ss[abs(ss[,'mpg'])==max(abs(ss[,'mpg']),na.rm = TRUE),])[2]
row.names(ss[abs(ss[,'cyl'])==max(abs(ss[,'cyl']),na.rm = TRUE),])[2]
row.names(ss[abs(ss[,'disp'])==max(abs(ss[,'disp']),na.rm = TRUE),])[2]
b<-row.names(ss[abs(ss[,'disp'])==max(abs(ss[,'disp']),na.rm = TRUE),])
b
b[b!="NA"]
#Funcion corrrelation filtering
correlation_filtering<-function(dat,target,umbral){#esta funcion regresa la lista de variables a eliminar!
elimina<-list()
dfc<-cor(dat)
dfc<-data.frame(dfc)
dfc[dfc==1]<-NA#eliminamos las correlaciones entre mismas variables
crf<-sapply(abs(dfc), max, na.rm = TRUE)
p<-ggplot(data=NULL,aes(x='variable',y=as.vector(crf)))+geom_boxplot()+
ggtitle('Distribución de correlaciones máximas por variable en valor absoluto')
print(p)
ll<-colnames(dat)
for(var in ll[ll!=target]){
if(max(abs(dfc[,var]),na.rm = TRUE)>umbral){
corvar<-row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),])
corvar<-corvar[corvar!="NA"]
print(row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),]))
print(paste0(var,corvar))
#Cuál tiramos?... la que este menos correlacionada con el target
if(abs(cor(dat[,var],dat[,target]))<abs(cor(dat[,corvar],dat[,target]))){
el<-var
print(paste0('elimina ',var))
}
else{
el<-corvar
print(paste0('elimina ',corvar))
}
if(!el %in% elimina){
elimina<-append(elimina,el)
}
}
}
return(elimina)
}
correlation_filtering(mtcars,'mpg',.875)
#Funcion corrrelation filtering
correlation_filtering<-function(dat,target,umbral){#esta funcion regresa la lista de variables a eliminar!
elimina<-list()
dfc<-cor(dat)
dfc<-data.frame(dfc)
dfc[dfc==1]<-NA#eliminamos las correlaciones entre mismas variables
crf<-sapply(abs(dfc), max, na.rm = TRUE)
p<-ggplot(data=NULL,aes(x='variable',y=as.vector(crf)))+geom_boxplot()+
ggtitle('Distribución de correlaciones máximas por variable en valor absoluto')
print(p)
ll<-colnames(dat)
for(var in ll[ll!=target]){
if(max(abs(dfc[,var]),na.rm = TRUE)>umbral){
corvar<-row.names(dfc[abs(dfc[,var])==max(abs(dfc[,var]),na.rm = TRUE),])
corvar<-corvar[corvar!="NA"]
print(paste0(var,corvar))
#Cuál tiramos?... la que este menos correlacionada con el target
if(abs(cor(dat[,var],dat[,target]))<abs(cor(dat[,corvar],dat[,target]))){
el<-var
print(paste0('elimina ',var))
}
else{
el<-corvar
print(paste0('elimina ',corvar))
}
if(!el %in% elimina){
elimina<-append(elimina,el)
}
}
}
return(elimina)
}
correlation_filtering(mtcars,'mpg',.875)
library(plyr)
library(dplyr)
library(ggplot2)
source('utils.R')
# Loading
data(mtcars)#cargamos mtcars
bye=correlation_filtering(mtcars,'mpg',0.875)#vamos a asiganr las variables a eliminar
#se eliminan:
bye
